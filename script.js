// problem1:- If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and
//  9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.

// let sum = 0;
// for(let i=1; i<1000; i++) {
//     if(i % 3 === 0 || i % 5 === 0){
//         sum += i;
//     }
// }
// console.log(sum);
// output=233168.

// problem2:-Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10
// terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued
// terms?



  
// const cap =400000;
// let prev =0;
// let curr =1;
// let next;
// let total =0;
// while(curr<cap){
//     next=prev+curr;
//     curr=next;
//     if (curr%2===0){
//         total +=curr;
//     }
// }
// console.log(total);

// output=4613732.


function sumFibonacci(){
    return fibSeries().reduce(function(total, item) {
        return  total += item;
    }, 0); 
} 
function fibSeries() {
    var a = 1;
    var b = 2;
    var next = a + b;
    var fibonacciArray = [2];
    while(next < 4000000){
        if(next % 2 === 0){
            fibonacciArray.push(next);
        }
        a = b;
        b = next;
        next = a + b;
        
    }
    return fibonacciArray;
}

